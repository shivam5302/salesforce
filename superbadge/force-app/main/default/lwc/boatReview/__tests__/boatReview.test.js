import { createElement } from 'lwc';
import BoatReview from 'c/boatReview';
import getAllReviews from '@salesforce/apex/BoatDataService.getAllReviews';
import mockGetRecord from './data/getReviews.json';

jest.mock(
	'@salesforce/apex/BoatDataService.getAllReviews',
	() => {
		const { createApexTestWireAdapter } = require('@salesforce/sfdx-lwc-jest');
		return {
			default: createApexTestWireAdapter(jest.fn())
		};
	},
	{ virtual: true }
);

jest.mock('c/fiveStarRating')


const flushPromises = async () => new Promise((resolve) => setTimeout(resolve, 0));

describe('c-boat-review', () => {
	afterEach(() => {
		// The jsdom instance is shared across test cases in a single file so reset the DOM
		while (document.body.firstChild) {
			document.body.removeChild(document.body.firstChild);
		}
	});

	it('TODO: test case generated by CLI command, please fill in test logic', () => {
		// Arrange
		const element = createElement('c-boat-review', {
			is: BoatReview
		});

		// Act
		document.body.appendChild(element);

		// Assert
		// const div = element.shadowRoot.querySelector('div');
		expect(1).toBe(1);
	});

	it('Wire Should show boat reviews', async () => {
			// Given
			const element = createElement('c-boat-review', {
				is: BoatReview
			});
			document.body.appendChild(element);
			
			getAllReviews.emit(mockGetRecord);
			// Wait for promises to resolve
			await flushPromises();

	
			// Then
			expect(element).toMatchSnapshot();
		});
});